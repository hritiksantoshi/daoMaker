{
	"functionDebugData": {
		"@_165": {
			"entryPoint": null,
			"id": 165,
			"parameterSlots": 2,
			"returnSlots": 0
		},
		"@_23": {
			"entryPoint": null,
			"id": 23,
			"parameterSlots": 0,
			"returnSlots": 0
		},
		"@_msgSender_124": {
			"entryPoint": null,
			"id": 124,
			"parameterSlots": 0,
			"returnSlots": 1
		},
		"@_transferOwnership_111": {
			"entryPoint": 82,
			"id": 111,
			"parameterSlots": 1,
			"returnSlots": 0
		},
		"abi_decode_tuple_t_addresst_uint256_fromMemory": {
			"entryPoint": 162,
			"id": null,
			"parameterSlots": 2,
			"returnSlots": 2
		}
	},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:367:3",
				"statements": [
					{
						"nodeType": "YulBlock",
						"src": "6:3:3",
						"statements": []
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "112:253:3",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "158:16:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "167:1:3",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "170:1:3",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "160:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "160:12:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "160:12:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "133:7:3"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "142:9:3"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "129:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "129:23:3"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "154:2:3",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "125:3:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "125:32:3"
									},
									"nodeType": "YulIf",
									"src": "122:52:3"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "183:29:3",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "202:9:3"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "196:5:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "196:16:3"
									},
									"variables": [
										{
											"name": "value",
											"nodeType": "YulTypedName",
											"src": "187:5:3",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "275:16:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "284:1:3",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "287:1:3",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "277:6:3"
													},
													"nodeType": "YulFunctionCall",
													"src": "277:12:3"
												},
												"nodeType": "YulExpressionStatement",
												"src": "277:12:3"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "234:5:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "245:5:3"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "260:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "265:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "256:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "256:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "269:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "252:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:19:3"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "241:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "241:31:3"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "231:2:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "231:42:3"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "224:6:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "224:50:3"
									},
									"nodeType": "YulIf",
									"src": "221:70:3"
								},
								{
									"nodeType": "YulAssignment",
									"src": "300:15:3",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "310:5:3"
									},
									"variableNames": [
										{
											"name": "value0",
											"nodeType": "YulIdentifier",
											"src": "300:6:3"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "324:35:3",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "344:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "355:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "340:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "340:18:3"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "334:5:3"
										},
										"nodeType": "YulFunctionCall",
										"src": "334:25:3"
									},
									"variableNames": [
										{
											"name": "value1",
											"nodeType": "YulIdentifier",
											"src": "324:6:3"
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "70:9:3",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "81:7:3",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "93:6:3",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "101:6:3",
								"type": ""
							}
						],
						"src": "14:351:3"
					}
				]
			},
			"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
			"id": 3,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"linkReferences": {},
	"object": "6080604052604051610402380380610402833981016040819052610022916100a2565b61002b33610052565b600155600280546001600160a81b0319166001600160a01b039092169190911790556100dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100b557600080fd5b82516001600160a01b03811681146100cc57600080fd5b6020939093015192949293505050565b610317806100eb6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063968ed6001161005b578063968ed600146100be578063ae90b213146100d5578063f2fde38b146100e8578063fa2a8997146100fb57600080fd5b806369d8957514610082578063715018a61461008c5780638da5cb5b14610094575b600080fd5b61008a61011f565b005b61008a610178565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c760015481565b6040519081526020016100b5565b6002546100a1906001600160a01b031681565b61008a6100f63660046102b1565b61018c565b60025461010f90600160a01b900460ff1681565b60405190151581526020016100b5565b610127610207565b6002805460ff60a01b198116600160a01b179091556001546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610175573d6000803e3d6000fd5b50565b610180610207565b61018a6000610261565b565b610194610207565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61017581610261565b6000546001600160a01b0316331461018a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102c357600080fd5b81356001600160a01b03811681146102da57600080fd5b939250505056fea26469706673582212200a8de95dfdfa5021c26afa6fc37fd1ff68f8c4ecf6d431c54044df412f72711764736f6c63430008110033",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x402 CODESIZE SUB DUP1 PUSH2 0x402 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x2B CALLER PUSH2 0x52 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xDC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x317 DUP1 PUSH2 0xEB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x968ED600 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x968ED600 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xAE90B213 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xFA2A8997 EQ PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x69D89575 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x11F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x178 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xA1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x8A PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x10F SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x180 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x18A PUSH1 0x0 PUSH2 0x261 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x194 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP DUP14 0xE9 0x5D REVERT STATICCALL POP 0x21 0xC2 PUSH11 0xFA6FC37FD1FF68F8C4ECF6 0xD4 BALANCE 0xC5 BLOCKHASH DIFFICULTY 0xDF COINBASE 0x2F PUSH19 0x711764736F6C63430008110033000000000000 ",
	"sourceMap": "116:403:2:-:0;;;242:143;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;304:10:2;:19;334:5;:14;;-1:-1:-1;;;;;;359:18:2;-1:-1:-1;;;;;334:14:2;;;359:18;;;;;;116:403;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:351:3:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:3;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:3:o;:::-;116:403:2;;;;;;"
}